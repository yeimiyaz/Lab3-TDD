[{"L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\index.js":"1","L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\reportWebVitals.js":"2","L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\App.js":"3","L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\components\\TodoList.js":"4","L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\components\\TodoItem.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2343,"mtime":1610756131639,"results":"9","hashOfConfig":"7"},{"size":221,"mtime":1610741846200,"results":"10","hashOfConfig":"7"},{"size":969,"mtime":1610748711453,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"newmax",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\index.js",[],["25","26"],"L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\reportWebVitals.js",[],"L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\App.js",["27","28","29","30"],"import React, {useState, useEffect} from 'react';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [saving, setSaving] = useState(false);\n\n  function onChange(e){\n    const value = e.target.value;\n    setNewTodo(value);\n  }\n\n  function addTodo(e){\n    e.preventDefault();\n    const value = {\n      userId: 3, \n      id: Math.floor(Math.random()*10000)+1,\n      title: newTodo,\n      completed: false\n    };\n\n    setSaving(true);\n    fetch('https://jsonplaceholder.typicode.com/todos',{\n      method: 'POST',\n      body: JSON.stringify(value),\n      headers: { 'Content-type' : 'application/json; charset=UTF-8'},\n    })\n\n      .then((response)=> response.json())\n      .then((result) =>{\n        setTodos(todos.concat({...result, id: value.id}));\n        setSaving(false);\n      });\n  }\n\n  useEffect(()=> {\n    async function fetchData() {\n      const result = await fetch(\"https://jsonplaceholder.typicode.com/todos\"). then((response) =>response.json());\n      setTodos(result.slice(0, 5));\n      setLoading(false);\n      return result;\n    }\n    fetchData();\n  }, []);\n\n  function removeTodo(id){\n    setTodos(todos.filter((t)=> t.id != id));\n  }\n\n  function updateTodo(id){\n    const newList = todos.map((todoItem)=>{\n      if (todoItem.id == id)\n      {\n        const updatedItem ={...todoItem, completed: !todoItem.completed};\n        return updatedItem;\n      }\n      return todoItem;\n    });\n    setTodos(newList);\n  }\n\n  const TodoList = ({todos, removeHandler, updateTodo}) =>{\n    <div>\n      { todos.map((t, i)=>(\n        <todoItem key={i} todo={t} removeHandler={removeHandler} updateTodo={updateTodo} />\n      ))}\n    </div>\n  };\n\n  return(\n    <div className=\"App\">    \n      <h1 className=\"header\"> My todo List</h1>\n      {loading ? ('Loading') : (<TodoList todos={todos} removeHandler={removeTodo} updateTodo={updateTodo}/>)}\n    \n      <div className=\"add-todo-form\">\n        {saving ?(\n          'Saving'\n        ):(\n          <form onSubmit={addTodo}>\n            <input type=\"text\" onChange={onChange}/>\n            <button type=\"submit\"> Add new todo </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\components\\TodoList.js",[],"L:\\Libs\\Documents\\GitHub\\Lab3-TDD-demo\\demo-tdd\\src\\components\\TodoItem.js",[],["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":16},{"ruleId":"41","severity":1,"message":"42","line":41,"column":28,"nodeType":"43","messageId":"44","endLine":41,"endColumn":85,"fix":"45"},{"ruleId":"46","severity":1,"message":"47","line":50,"column":38,"nodeType":"48","messageId":"49","endLine":50,"endColumn":40},{"ruleId":"46","severity":1,"message":"50","line":55,"column":23,"nodeType":"48","messageId":"49","endLine":55,"endColumn":25},{"ruleId":"33","replacedBy":"51"},{"ruleId":"35","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"55","text":"56"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["53"],["54"],"no-global-assign","no-unsafe-negation",[1097,1099],"."]